<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/28/2019 10:41:16 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ACWIEK01"
  DTS:CreatorName="AzureAD\ArkadiuszĆwiek"
  DTS:DTSID="{D8A68F9D-80B9-48E8-AC03-50ECF8BB4818}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.98"
  DTS:LocaleID="1045"
  DTS:ObjectName="Load_wwoHistoricalWeather"
  DTS:PackageType="5"
  DTS:VersionBuild="11"
  DTS:VersionGUID="{3FD48A9B-9285-43E1-A26C-DFC080934E1A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[File]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{B45E093F-F4A7-4C70-B344-833CF58D4C59}"
      DTS:ObjectName="File">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ODSFilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter="_x000D__x000A_"
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1250"
          DTS:ConnectionString="C:\ODS\wwoHistoricalWeather_2018-01-01_Warsaw.json">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="302"
              DTS:ObjectName="JsonData"
              DTS:DTSID="{A9CF988C-55F2-418C-8EF7-71527E2D74E8}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{6294CDA7-A8AD-4497-9CB0-346FFC9B8A99}"
      DTS:ObjectName="API">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">http://api.worldweatheronline.com/premium/v1/past-weather.ashx?</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{59D50A85-D2A1-42CF-8D87-68855A9EAC5F}"
      DTS:ObjectName="APIKey">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">afcded77a7e4446198c120431192802</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{76BD9666-F645-42F9-AABC-8B9F0373EF38}"
      DTS:ObjectName="City">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Warsaw</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E4249AEC-D85D-45EB-8CF2-3DFD41045AA3}"
      DTS:ObjectName="DateToLoad">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">2018-01-01</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2C67BE6E-AE0A-4E6C-A79B-660911463833}"
      DTS:ObjectName="ObjectName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">wwoHistoricalWeather</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{87CF3F95-4AF7-4C1A-B0AA-359DB3FE7535}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::API] + &quot;key=&quot; +  @[$Package::APIKey] + &quot;&amp;q=&quot; +  @[$Package::City] + &quot;&amp;format=json&amp;date=&quot; +  @[$Package::DateToLoad] + &quot;&amp;includelocation=yes&amp;tp=3&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DownloadURL">
      <DTS:VariableValue
        DTS:DataType="8">http://api.worldweatheronline.com/premium/v1/past-weather.ashx?key=afcded77a7e4446198c120431192802&amp;q=Warsaw&amp;format=json&amp;date=2018-01-01&amp;includelocation=yes&amp;tp=3</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0F646BBA-1CBA-4B8F-8679-118FB45CE2B5}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ODSLocation] + &quot;\\&quot; +  @[$Package::ObjectName] + &quot;_&quot; + @[$Package::DateToLoad] + &quot;_&quot; + @[$Package::City] + &quot;.json&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ODSFilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\ODS\wwoHistoricalWeather_2018-01-01_Warsaw.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C806C1B9-5B6B-4F50-BBF6-683432D55A52}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;[ods].[&quot;+ @[$Package::ObjectName]  + &quot;_staging]&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="StagingObjectName">
      <DTS:VariableValue
        DTS:DataType="8">[ods].[wwoHistoricalWeather_staging]</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Download file"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{1D3818C5-A65D-48C4-B1D5-63443682CE53}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Download file"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_35181d1176e447feb2ed5c909de5410f"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::DownloadURL,User::ODSFilePath">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Net;
using System.IO;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_35181d1176e447feb2ed5c909de5410f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{


            bool fireAgain = true;

            Dts.Events.FireInformation(1, "General", "Script started", "", 0, ref fireAgain);

            #region SSIS Variables
            // Variable assignment
            string DownloadURL = (string)Dts.Variables["User::DownloadURL"].Value;
            string ODSFilePath = (string)Dts.Variables["User::ODSFilePath"].Value;

            Dts.Events.FireInformation(2, "Variable assignment", "Variables assigned", "", 0, ref fireAgain);
            Dts.Events.FireInformation(2, "Variable assignment", "Download URL: " + DownloadURL, "", 0, ref fireAgain);
            Dts.Events.FireInformation(2, "Variable assignment", "File to be loaded: " + ODSFilePath, "", 0, ref fireAgain);
            #endregion

            #region File Download
            HttpWebRequest request = WebRequest.Create(DownloadURL) as HttpWebRequest;
            request.Method = "GET";
            HttpWebResponse response;
            Dts.Events.FireInformation(4, "REST API", "Start downloading ", "", 0, ref fireAgain);

            try
            {
                response = request.GetResponse() as HttpWebResponse;
                Dts.Events.FireInformation(4, "REST API", "Connected", "", 0, ref fireAgain);
                Stream receiveStream = response.GetResponseStream();
                //Reading from stream and writing to file
                Dts.Events.FireInformation(4, "REST API", "Stream open", "", 0, ref fireAgain);

                //create file
                Stream output = File.Open(ODSFilePath, FileMode.Create);

                //Reads csv
                Dts.Events.FireInformation(4, "REST API", "Copying from stream started", "", 0, ref fireAgain);
                receiveStream.CopyTo(destination: output);
                Dts.Events.FireInformation(4, "REST API", "File created", "", 0, ref fireAgain);

                response.Close();
                receiveStream.Close();
                output.Close();
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(21, "REST API", ex.Message, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            Dts.TaskResult = (int)ScriptResults.Success;
            #endregion
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_35181d1176e447feb2ed5c909de5410f.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{95289DB5-605D-4421-83B4-55BDB5339050}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_35181d1176e447feb2ed5c909de5410f</RootNamespace>
    <AssemblyName>ST_35181d1176e447feb2ed5c909de5410f</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_35181d1176e447feb2ed5c909de5410f</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_35181d1176e447feb2ed5c909de5410f</msb:DisplayName>
		<msb:ProjectId>{DEFE3622-5A39-4596-9C31-781E4B655FB0}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_35181d1176e447feb2ed5c909de5410f.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_35181d1176e447feb2ed5c909de5410f.Properties.Settings.get_Default():ST_35181d1176e447feb2ed5c909de5410f.Properties.Sett" +
    "ings")]

namespace ST_35181d1176e447feb2ed5c909de5410f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_35181d1176e447feb2ed5c909de5410f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_35181d1176e447feb2ed5c909de5410f")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_35181d1176e447feb2ed5c909de5410f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_35181d1176e447feb2ed5c909de5410f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_35181d1176e447feb2ed5c909de5410f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_35181d1176e447feb2ed5c909de5410f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_35181d1176e447feb2ed5c909de5410f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_35181d1176e447feb2ed5c909de5410f.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMkWeVwAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAA8jIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKAyAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA+BIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADU
MgAAAAAAAEgAAAACAAUA8CIAAPgOAAABAAAAAAAAAOgxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswCAAcAgAAAQAAERcKAigQAAAKbxEAAAoXcgEAAHByEQAA
cHIvAABwFhIAbxIAAAoCKBAAAApvEwAACnIxAABwbxQAAApvFQAACnQgAAABCwIoEAAACm8TAAAK
clUAAHBvFAAACm8VAAAKdCAAAAEMAigQAAAKbxEAAAoYcnkAAHByoQAAcHIvAABwFhIAbxIAAAoC
KBAAAApvEQAAChhyeQAAcHLHAABwBygWAAAKci8AAHAWEgBvEgAACgIoEAAACm8RAAAKGHJ5AABw
cuUAAHAIKBYAAApyLwAAcBYSAG8SAAAKBygXAAAKdQ8AAAENCXINAQBwbxgAAAoCKBAAAApvEQAA
ChpyFQEAcHInAQBwci8AAHAWEgBvEgAACglvGQAACnUQAAABEwQCKBAAAApvEQAAChpyFQEAcHJN
AQBwci8AAHAWEgBvEgAAChEEbxoAAAoCKBAAAApvEQAAChpyFQEAcHJhAQBwci8AAHAWEgBvEgAA
CggYKBsAAAoTBQIoEAAACm8RAAAKGnIVAQBwcnkBAHByLwAAcBYSAG8SAAAKJREFbxwAAAoCKBAA
AApvEQAAChpyFQEAcHKxAQBwci8AAHAWEgBvEgAAChEEbx0AAApvHgAAChEFbx4AAAreNRMGAigQ
AAAKbxEAAAofFXIVAQBwEQZvHwAACnIvAABwFm8gAAAKJgIoEAAAChdvIQAACt4AAigQAAAKFm8h
AAAKKgEQAAAAABQBxtoBNRIAAAEeAigiAAAKKh4CKCMAAAoqrn4BAAAELR5yywEAcNADAAACKCQA
AApvJQAACnMmAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoJwAACioucwgA
AAaAAwAABCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAEgEAAAjfgAAtAQA
AEAGAAAjU3RyaW5ncwAAAAD0CgAAQAIAACNVUwA0DQAAEAAAACNHVUlEAAAARA0AALQBAAAjQmxv
YgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAoAAAABQAAAAYAAAAJAAAAAQAAACcAAAAC
AAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAADLAwEAAAAAAAYAWQL8BAYA
6AL8BAYApQHpBA8AcAUAAAYA0gF7BAYAPAJ7BAYAHQJ7BAYAzwJ7BAYAeQJ7BAYAkgJ7BAYA6QF7
BAYABAI6AwoArQJ6AwoA+wB6Aw4AIgb8BQ4ALwH8BQYACQQKAAYAjQQZBAYAIAQZBAYAiAHpBAYA
9QUZBAYArgQcBQYAngRmBA4AWAG1Aw4AuQG1Aw4AFwFRBAYAbQH8BAoAowN6AwoAvgR6AxIAsgWm
ABIAdACmAAYAVAMZBA4AJgb8BQ4AMwH8BQYAoQAKAAYA8wMKAAYAXwAKAAYAxgAZBAYAfQAZBAYA
NQZ7BAAAAAABAAAAAAABAAEAAQAQADYEFgM5AAEAAQAAABAAIwV/BVUAAQADAAABEAC8BX8FaQAD
AAcAAwEAANUFAABNAAQACgARACUEtQARAOsAuQARAE8AvQAGBjMAwQBWgMUFxABWgMsAxABQIAAA
AACGADwEBgABAIgiAAAAAIYY3AQGAAEAkCIAAAAAgxjcBAYAAQCYIgAAAACTCKoEyAABAMQiAAAA
AJMI0wDNAAEAyyIAAAAAkwjfANIAAQDTIgAAAACWCAcG2AACANoiAAAAAIYY3AQGAAIA4iIAAAAA
kRjiBN0AAgAAAAEAEAMJANwEAQARANwEBgAZANwECgApANwEEAAxANwEEAA5ANwEEABBANwEEABJ
ANwEEABRANwEEABZANwEEABhANwEEABpANwEBgChANwEBgDJANwEFQDZANwEBgBxAM0FKQDhAOMF
LgDpAEEEMwDhAK4FPgDxABAEQwD5AAYDSQABAe4FTQAJAVEBUwAJAUQAEAAJAT8BWgARAf4DYAAZ
ATEEZQCJAJcEbwARAUsBBgCJAEsBBgCRAGgAdQDpANIEeQDhABMGAQBxANwEBgCpANwEBgAxAY8A
ggAxATEGiwCxANwEkQDRANwEBgAIABQAqwAIABgAsAApAHMAGAEuAAsA8AAuABMA+QAuABsAGAEu
ACMAIQEuACsASgEuADMASgEuADsASgEuAEMAIQEuAEsAUAEuAFMASgEuAFsAZwFDAGMAsABJAHMA
GAFhAHsAsABjAGsAsAAbAAMAAQAEAAMAAACuBOEAAADzAOYAAAALBusAAgAEAAMAAgAFAAUAAQAG
AAUAAgAHAAcABIAAAAEAAABXG2xXAAAAAAAAFgMAAAQAAAAAAAAAAAAAAJkAOwAAAAAADgAAAAAA
AAAAAAAAogBbAwAAAAAEAAAAAAAAAAAAAACZABkEAAAAAA4AAAAAAAAAAAAAAKIAFAAAAAAAAAAA
AAEAAAAtBQAABQACAAAAAAAAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
TWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAHNldF9NZXRob2QAZGVmYXVsdEluc3RhbmNlAEZp
bGVNb2RlAGdldF9NZXNzYWdlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAEZpbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVj
dE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBIdHRwV2ViUmVzcG9uc2UAR2V0UmVz
cG9uc2UAQ2xvc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25m
aWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlD
b3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2Vt
Ymx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFs
dWUAdmFsdWUAU1RfMzUxODFkMTE3NmU0NDdmZWIyZWQ1YzkwOWRlNTQxMGYAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBTdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNUXzM1MTgxZDExNzZlNDQ3ZmViMmVkNWM5MDlkZTU0MTBmLmRs
bABGaWxlU3RyZWFtAEdldFJlc3BvbnNlU3RyZWFtAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291
cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAENvcHlU
bwBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIARmly
ZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzM1MTgxZDExNzZlNDQ3ZmViMmVkNWM5
MDlkZTU0MTBmLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
VF8zNTE4MWQxMTc2ZTQ0N2ZlYjJlZDVjOTA5ZGU1NDEwZi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJs
ZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBDb25j
YXQAT2JqZWN0AFN5c3RlbS5OZXQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQASHR0cFdlYlJl
cXVlc3QAZ2V0X0Fzc2VtYmx5AAAAAA9HAGUAbgBlAHIAYQBsAAAdUwBjAHIAaQBwAHQAIABzAHQA
YQByAHQAZQBkAAABACNVAHMAZQByADoAOgBEAG8AdwBuAGwAbwBhAGQAVQBSAEwAACNVAHMAZQBy
ADoAOgBPAEQAUwBGAGkAbABlAFAAYQB0AGgAACdWAGEAcgBpAGEAYgBsAGUAIABhAHMAcwBpAGcA
bgBtAGUAbgB0AAAlVgBhAHIAaQBhAGIAbABlAHMAIABhAHMAcwBpAGcAbgBlAGQAAB1EAG8AdwBu
AGwAbwBhAGQAIABVAFIATAA6ACAAACdGAGkAbABlACAAdABvACAAYgBlACAAbABvAGEAZABlAGQA
OgAgAAAHRwBFAFQAABFSAEUAUwBUACAAQQBQAEkAACVTAHQAYQByAHQAIABkAG8AdwBuAGwAbwBh
AGQAaQBuAGcAIAAAE0MAbwBuAG4AZQBjAHQAZQBkAAAXUwB0AHIAZQBhAG0AIABvAHAAZQBuAAA3
QwBvAHAAeQBpAG4AZwAgAGYAcgBvAG0AIABzAHQAcgBlAGEAbQAgAHMAdABhAHIAdABlAGQAABlG
AGkAbABlACAAYwByAGUAYQB0AGUAZAAAcVMAVABfADMANQAxADgAMQBkADEAMQA3ADYAZQA0ADQA
NwBmAGUAYgAyAGUAZAA1AGMAOQAwADkAZABlADUANAAxADAAZgAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAr2KmSaehiEWNxWFZzlNUSgAEIAEBCAMgAAEFIAEB
EREEIAEBDgUgAQERYQ0HBwIODhI9EkESRRJJBCAAEnEEIAASdQogBgEIDg4OCBACBCAAEnkFIAES
fRwDIAAcBQACDg4OBgABEoCFDgUgABKAiQQgABJFCQACEoCRDhGAlQUgAQESRQMgAA4IIAUCCA4O
DggIAAESgJkRgJ0FIAASgKEHIAIBDhKAoQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJZ
AwYSXQMGEhACBggDBhEUBAAAElkEAAASXQUAAQESXQQAABIQAwAAAQQIABJZBAgAEl0ECAASEAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMzUx
ODFkMTE3NmU0NDdmZWIyZWQ1YzkwOWRlNTQxMGYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAx
OQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRIuTkVUIEZyYW1ld29yayA0LjUAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMu
UmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJh
bCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRp
bWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAyDIAAAAAAAAAAAAA4jIAAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAANQyAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAbFdXGwAAAQBsV1cbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwAzADUAMQA4ADEAZAAxADEANwA2AGUANAA0ADcAZgBlAGIAMgBlAGQANQBjADkAMAA5
AGQAZQA1ADQAMQAwAGYAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NgA5ADkAOQAuADIAMgAzADgAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwAzADUAMQA4ADEAZAAxADEANwA2AGUANAA0ADcAZgBlAGIAMgBlAGQANQBjADkAMAA5AGQA
ZQA1ADQAMQAwAGYALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADMANQAxADgAMQBkADEAMQA3ADYAZQA0ADQANwBmAGUAYgAyAGUAZAA1AGMA
OQAwADkAZABlADUANAAxADAAZgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwAzADUAMQA4ADEAZAAxADEANwA2AGUANAA0ADcAZgBlAGIAMgBlAGQANQBjADkA
MAA5AGQAZQA1ADQAMQAwAGYAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADYAOQA5ADkALgAyADIAMwA4ADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAOQA5ADkALgAyADIAMwA4ADAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA9DIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load JSON to Staging"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{37F48B77-5958-437B-A693-A0EACD6134A0}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load JSON to Staging"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load JSON to Staging\Add metadata"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add metadata"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load JSON to Staging\Add metadata.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Load JSON to Staging\Add metadata.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Output].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="100"
                      lineageId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Output].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[$Package::City]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[$Package::City]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Output].Columns[Date]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Output].Columns[Date]"
                      name="Date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[$Package::DateToLoad]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[$Package::DateToLoad]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Load JSON to Staging\Add metadata.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load JSON to Staging\DEST"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="DEST"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[ods].[wwoHistoricalWeather]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable">User::StagingObjectName</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1250</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">4</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load JSON to Staging\DEST.Connections[OleDbConnection]"
                  connectionManagerID="{7C197763-39DB-410A-BFD0-7A5790AD2C64}:external"
                  connectionManagerRefId="Project.ConnectionManagers[WeatherDemo]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load JSON to Staging\DEST.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load JSON to Staging\DEST.Inputs[OLE DB Destination Input].Columns[JsonData]"
                      cachedCodepage="1250"
                      cachedDataType="text"
                      cachedName="JsonData"
                      externalMetadataColumnId="Package\Load JSON to Staging\DEST.Inputs[OLE DB Destination Input].ExternalColumns[JsonData]"
                      lineageId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Output].Columns[JsonData]" />
                    <inputColumn
                      refId="Package\Load JSON to Staging\DEST.Inputs[OLE DB Destination Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="City"
                      externalMetadataColumnId="Package\Load JSON to Staging\DEST.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                      lineageId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Output].Columns[City]" />
                    <inputColumn
                      refId="Package\Load JSON to Staging\DEST.Inputs[OLE DB Destination Input].Columns[Date]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="Date"
                      externalMetadataColumnId="Package\Load JSON to Staging\DEST.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                      lineageId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Output].Columns[Date]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load JSON to Staging\DEST.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                      dataType="dbDate"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\Load JSON to Staging\DEST.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                      dataType="wstr"
                      length="100"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Load JSON to Staging\DEST.Inputs[OLE DB Destination Input].ExternalColumns[JsonData]"
                      codePage="1250"
                      dataType="text"
                      name="JsonData" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load JSON to Staging\DEST.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Load JSON to Staging\DEST.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load JSON to Staging\DEST.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load JSON to Staging\DEST.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load JSON to Staging\DEST.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load JSON to Staging\DEST.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load JSON to Staging\JSON  File"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="JSON  File"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load JSON to Staging\JSON  File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[File]"
                  connectionManagerRefId="Package.ConnectionManagers[File]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Output].Columns[JsonData]"
                      codePage="1250"
                      dataType="text"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Output].ExternalColumns[JsonData]"
                      lineageId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Output].Columns[JsonData]"
                      name="JsonData"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Output].ExternalColumns[JsonData]"
                      codePage="1250"
                      dataType="text"
                      name="JsonData" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load JSON to Staging.Paths[Derived Column Output]"
              endId="Package\Load JSON to Staging\DEST.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Load JSON to Staging\Add metadata.Outputs[Derived Column Output]" />
            <path
              refId="Package\Load JSON to Staging.Paths[Flat File Source Output]"
              endId="Package\Load JSON to Staging\Add metadata.Inputs[Derived Column Input]"
              name="Flat File Source Output"
              startId="Package\Load JSON to Staging\JSON  File.Outputs[Flat File Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{64923EDD-D13E-476D-947F-AF01FFB9BE0D}"
      DTS:From="Package\Download file"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load JSON to Staging" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="143,42"
          Id="Package\Download file"
          TopLeft="435,137" />
        <NodeLayout
          Size="181,42"
          Id="Package\Load JSON to Staging"
          TopLeft="408,236" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="506.5,179">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8,57"
              Start="0,0"
              End="-8,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.5"
                    Point2="0,28.5"
                    Point3="-4,28.5" />
                  <mssgle:LineSegment
                    End="-4,28.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-4,28.5"
                    Point2="-8,28.5"
                    Point3="-8,32.5" />
                  <mssgle:LineSegment
                    End="-8,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load JSON to Staging">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="127,42"
          Id="Package\Load JSON to Staging\JSON  File"
          TopLeft="542,64" />
        <NodeLayout
          Size="145,42"
          Id="Package\Load JSON to Staging\Add metadata"
          TopLeft="527,153" />
        <EdgeLayout
          Id="Package\Load JSON to Staging.Paths[Flat File Source Output]"
          TopLeft="602.5,106">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="104,42"
          Id="Package\Load JSON to Staging\DEST"
          TopLeft="550,262" />
        <EdgeLayout
          Id="Package\Load JSON to Staging.Paths[Derived Column Output]"
          TopLeft="600.75,195">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67"
              Start="0,0"
              End="0,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load JSON to Staging\DEST">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>